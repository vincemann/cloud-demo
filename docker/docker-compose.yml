version: '2.1'

services:
  database:
    image: postgres:latest
    ports:
    # changed port bc votesnack db is already running on that port
      - "5532:5432"
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_DB: "localme_dev"
#    volumes:
#        - ./init.sql:/docker-entrypoint-initdb.d/1-init.sql
#        - ./data.sql:/docker-entrypoint-initdb.d/2-data.sql
    networks:
      backend:
        aliases:
          - "database"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -h localhost -d localme_dev"]
#      test: ["CMD-SHELL", "nmap -p 5532 localhost | grep open"]
      interval: 10s
      timeout: 5s
      retries: 5
  configserver:
    image: localme/configserver:0.0.1-SNAPSHOT
    ports:
       - "8071:8071"
#    environment:
#      ENCRYPT_KEY: "${ENCRYPT_KEY}"
#      ENCRYPT_KEY: PAENFOISDNFO8433NFNDR0567
#      GIT_READ_KEY: "${GIT_READ_KEY}"
#      GIT_READ_KEY: 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
    networks:
      backend:
        aliases:
          - "configserver"
#    healthcheck:
#          test: ["CMD", "curl --fail --silent localhost:8071/actuator/health | grep UP || exit 1"]
#          interval: 10s
#          timeout: 5s
#          retries: 5
    depends_on:
          database:
            condition: service_healthy
          database:
            condition: service_started

  posting-service:
    image: localme/posting-service:0.0.2-SNAPSHOT
#    depends_on:
#      configserver:
#        condition: service_healthy
#      configserver:
#        condition: service_started
    ports:
      - "8080:8080"
    networks:
      - backend
    command: "bash -c 'wait-for-it configserver:8071 -- java -jar /app.jar'"

  local-posting-service:
      image: localme/local-posting-service:0.0.1-SNAPSHOT
#      depends_on:
#        configserver:
#          condition: service_healthy
#        configserver:
#          condition: service_started
      ports:
        - "8082:8080"
      networks:
        - backend
#      command: "wait-for-it configserver:8071 -- java -jar /app.jar"
#      command: [ "CMD-SHELL", "wait-for-it", "configserver:8071", "--", "java","-jar","/app.jar" ]
      command: "bash -c 'wait-for-it configserver:8071 -- java -jar /app.jar'"



  comment-service:
      image: localme/comment-service:0.0.1-SNAPSHOT
#      depends_on:
#        configserver:
#          condition: service_healthy
#        configserver:
#          condition: service_started
      ports:
          - "8081:8080"
      networks:
          - backend
#      command: [ "CMD-SHELL", "wait-for-it", "configserver:8071", "--", "java","-jar","/app.jar" ]
      command: "bash -c 'wait-for-it configserver:8071 -- java -jar /app.jar'"


networks:
  backend:
    driver: bridge